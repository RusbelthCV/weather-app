[{"C:\\Users\\pc\\Desktop\\weatherapp\\src\\index.js":"1","C:\\Users\\pc\\Desktop\\weatherapp\\src\\App.js":"2","C:\\Users\\pc\\Desktop\\weatherapp\\src\\reportWebVitals.js":"3","C:\\Users\\pc\\Desktop\\weatherapp\\src\\components\\menuHome.js":"4","C:\\Users\\pc\\Desktop\\weatherapp\\src\\components\\MenuHome.js":"5","C:\\Users\\pc\\Desktop\\weatherapp\\src\\components\\Weather.js":"6"},{"size":478,"mtime":1610018779280,"results":"7","hashOfConfig":"8"},{"size":616,"mtime":1610024534923,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":882,"mtime":1609937983114,"results":"11","hashOfConfig":"8"},{"size":1573,"mtime":1610157398828,"results":"12","hashOfConfig":"8"},{"size":2555,"mtime":1610203334237,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"ix5jk0",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"C:\\Users\\pc\\Desktop\\weatherapp\\src\\index.js",[],["29","30"],"C:\\Users\\pc\\Desktop\\weatherapp\\src\\App.js",[],"C:\\Users\\pc\\Desktop\\weatherapp\\src\\reportWebVitals.js",[],"C:\\Users\\pc\\Desktop\\weatherapp\\src\\components\\menuHome.js",["31","32"],"C:\\Users\\pc\\Desktop\\weatherapp\\src\\components\\MenuHome.js",["33","34","35"],"import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Weather from \"./Weather\";\r\n\r\nclass MenuHome extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            city: \"\",\r\n            language: \"\"\r\n        }\r\n        this.enviar = this.enviar.bind(this);\r\n    }\r\n    enviar = (event) => {\r\n        event.preventDefault();\r\n        let city = event.target.elements.city.value;\r\n        let language = event.target.elements.lang.value;\r\n        \r\n        this.setState({city: city,language:language});\r\n    }\r\n    render = () => {\r\n        let redirect;\r\n        if(this.state.city != \"\" && this.state.language != \"\"){\r\n            redirect = <Redirect to={{\r\n                pathname:\"/tiempo\",\r\n                state:this.state\r\n            }}/>\r\n        }\r\n        return(\r\n            <form onSubmit={this.enviar} method=\"POST\">\r\n                <label htmlFor=\"city-name\">Nombre de la ciudad</label>\r\n                <input type=\"text\" name=\"city\" id=\"city-name\" required />\r\n                <label htmlFor=\"lang\">Idioma</label>\r\n                <select id=\"lang\">\r\n                    <option value=\"es\">Español</option>\r\n                    <option value=\"ca\">Catalán</option>\r\n                    <option value=\"fr\">Francés</option>\r\n                    <option value=\"en\">Inglés</option>\r\n                </select>\r\n                <input type=\"submit\" value=\"Consultar\"/>\r\n                {redirect}\r\n            </form>\r\n        )\r\n        \r\n    }\r\n}\r\nexport default MenuHome;","C:\\Users\\pc\\Desktop\\weatherapp\\src\\components\\Weather.js",["36"],"import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport \"../assets/css/weather.css\";\r\n\r\nclass Weather extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            city: this.props.location.state.city,\r\n            lang: this.props.location.state.language,\r\n            coord:[],\r\n            weather: []\r\n        };\r\n        this.getLatLong = this.getLatLong.bind(this);\r\n        this.getWeather = this.getWeather.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.getLatLong();\r\n    }\r\n    getWeather = () => {\r\n        const APIKEY2 = '55257f1606c8983cdaf2a9253f8f5086';\r\n        const url = 'http://api.openweathermap.org/data/2.5/onecall';\r\n        let requestWeather = url+\"?lat=\"+this.state.coord.lat+\"&lon=\"+this.state.coord.lon+\"&units=metric\"+\r\n        \"&exclude=hourly,minutely&lang=\"+this.state.lang+\"&appid=\"+APIKEY2;\r\n        fetch(requestWeather)\r\n            .then(data => data.json())\r\n            .then(data =>{\r\n                this.setState({\r\n                    weather: data.daily\r\n                })\r\n            })\r\n        .catch(err => console.log(err))\r\n    }\r\n    getLatLong = () => {\r\n        const APIKEY = '55257f1606c8983cdaf2a9253f8f5086';\r\n        const urlLatLong =  \"http://api.openweathermap.org/data/2.5/weather\";\r\n        let url = urlLatLong + \"?q=\"+this.state.city+\"&appid=\"+APIKEY;\r\n        fetch(url)\r\n            .then(data => data.json())\r\n            .then(datajson => {\r\n                this.setState({\r\n                    coord:datajson.coord\r\n                })\r\n            })\r\n            .then(() => this.getWeather())\r\n            .catch(err => console.log(err));\r\n    }\r\n    render = () =>{\r\n        let htmlFormat = this.state.weather.map(el => <div className=\"prediction\" key={el.id}>\r\n            <img src={\"http://openweathermap.org/img/wn/\"+el.weather[0].icon+\"@2x.png\"}></img>\r\n            <p className=\"description\" key={el.id+\"description\"}>{el.weather[0].description}</p>\r\n            <div className=\"temp\">\r\n                <p className=\"max\">Temperatura Máxima: {el.temp.max}ºC</p>\r\n                <p className=\"min\">Temperatura Mínima: {el.temp.min}ºC</p>\r\n            </div>\r\n            <p className=\"lluvia\">Probabilidad de lluvia: {el.pop * 100}%</p>\r\n            <p className=\"humedad\">Humedad: {el.humidity}%</p>\r\n        </div>)\r\n        return(\r\n        <div className=\"weather\">\r\n            {htmlFormat}\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Weather);",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":5,"column":15,"nodeType":"43","messageId":"44","endLine":5,"endColumn":21},{"ruleId":"41","severity":1,"message":"45","line":6,"column":15,"nodeType":"43","messageId":"44","endLine":6,"endColumn":18},{"ruleId":"41","severity":1,"message":"46","line":3,"column":8,"nodeType":"43","messageId":"44","endLine":3,"endColumn":15},{"ruleId":"47","severity":1,"message":"48","line":23,"column":28,"nodeType":"49","messageId":"50","endLine":23,"endColumn":30},{"ruleId":"47","severity":1,"message":"48","line":23,"column":57,"nodeType":"49","messageId":"50","endLine":23,"endColumn":59},{"ruleId":"51","severity":1,"message":"52","line":50,"column":13,"nodeType":"53","endLine":50,"endColumn":89},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'APIKEY' is assigned a value but never used.","Identifier","unusedVar","'url' is assigned a value but never used.","'Weather' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]